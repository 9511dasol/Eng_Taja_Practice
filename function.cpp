#include "Header.h"

#define ESC 0x1b

using namespace std;

string str[] = {
    "\0",
};
void draw_ascii_art(WINDOW *win, int y, int x, std::string txt) {
    //문자열을 저장하는 벡터 생성
    vector<std::string> ascii_art;
    // txt파일 열기
    ifstream in(txt);
    //해당 txt 없을 시 파일을 찾을 수 없다는 문구 출력 후 함수 종료
    if (!in.is_open()) {
        mvwprintw(win, y, x, "Can't find file");
        return;
    }

    // txt파일을 한 줄씩 읽어서 벡터에 저장
    std::string s;
    while (in) {
        getline(in, s);
        ascii_art.push_back(s);
    }
    //아스키 아트 출력
    int i = 0;
    for (i; i < ascii_art.size() - 1; i++) {
        mvwprintw(win, y + 2 * i, x, "%s\n", ascii_art[i].c_str());
        str[i] = ascii_art[i].c_str();
    }
}

void sampletext(WINDOW *Windows) {
    mvwprintw(Windows, 2, 60, " The goal of neuromorphic chips");
    draw_ascii_art(Windows, 4, 0, "data.txt");
}

void menu(WINDOW *Windows) {
    line(Windows);

    mvwprintw(Windows, 7, 2,
              " _________  __  __   ______   ________  ___   __    _______     "
              " ______   ______    ________   ______  _________  ________  "
              "______   ______");
    mvwprintw(Windows, 8, 2,
              "/________/\\/_/\\/_/\\ /_____/\\ /_______/\\/__/\\ /__/\\ "
              "/______/\\    /_____/\\ /_____/\\  /_______/\\ "
              "/_____/\\/________/\\/_______/\\/_____/\\ /_____/\\");
    mvwprintw(Windows, 9, 2,
              "\\__.::.__\\/\\ \\ \\ \\ \\:::_ \\ \\__.::._\\/\\::\\_\\  \\ "
              "\\::::__\\/__  \\:::_ \\ \\:::_ \\ \\ \\::: _  \\ "
              "\\:::__\\/\\__.::.__\\/\\__.::._\\/\\:::__\\/ \\::::_\\/_");
    mvwprintw(Windows, 10, 2,
              "   \\::\\ \\   \\:\\_\\ \\ \\:(_) \\ \\  \\::\\ \\  \\:. `-\\  "
              "\\ \\:\\ /____/\\  \\:(_) \\ \\:(_) ) )_\\::(_)  \\ \\:\\ \\  "
              "__ \\::\\ \\     \\::\\ \\  \\:\\ \\  __\\:\\/___/\\");
    mvwprintw(Windows, 11, 2,
              "    \\::\\ \\   \\::::_\\/ \\: ___\\/  _\\::\\ \\__\\:. _    \\ "
              "\\\\:\\\\_  _\\/   \\: ___\\/ \\: __ `\\ \\:: __  \\ \\\\:\\ "
              "\\/_/\\ \\::\\ \\    _\\::\\ \\__\\:\\ \\/_/\\\\::___\\/_");
    mvwprintw(
        Windows, 12, 2,
        "     \\::\\ \\    \\::\\ \\  \\ \\ \\   /__\\::\\__/\\\\. \\`-\\  \\ "
        "\\\\:\\_\\ \\ \\    \\ \\ \\    \\ \\ `\\ \\ \\\\:.\\ \\  \\ "
        "\\\\:\\_\\ \\ \\ \\::\\ \\  /__\\::\\__/\\\\:\\_\\ \\ \\\\:\\____/\\");
    mvwprintw(Windows, 13, 2,
              "      \\__\\/     \\__\\/   \\_\\/   \\________\\/ \\__\\/ "
              "\\__\\/ \\_____\\/     \\_\\/     \\_\\/ \\_\\/ \\__\\/\\__\\/ "
              "\\_____\\/  \\__\\/  \\________\\/ \\_____\\/ \\_____\\/");

    draw_ascii_art(Windows, 18, 63, "b.txt");
    sideframe(Windows);
    mvwprintw(Windows, 49, 0,
              "|--------------------------------------------------------"
              "---------------------------------------------------------"
              "-----------------------------------|");
}
void sideframe(WINDOW *win) {
    for (int i = 1; i < 49; i++) {
        mvwprintw(win, i, 0, "|");
        mvwprintw(win, i, 149, "|");
    }
}

void line(WINDOW *Windows) {
    wprintw(Windows, "|--------------------------------------------------------"
                     "---------------------------------------------------------"
                     "-----------------------------------|");
}
